#log configuration
#log.level:INFO, ERR, WARNING, DEBUG, FINE, FINER, ALL
log.level=INFO
log.debug=false
log.fsize=10
log.collectEnable=false
log.collectMatch=

#config the datacenter id
meta.datacenterid=1
#config the node type
#the node type means the deployed component name of UAV network
meta.nodetype=\u5FC3\u8DF3\u670D\u52A1

#-----------------------------COMMON FEATURES START---------------------------------------------------
#resource components
#resource.xxxx
resource.messageproducer.class=org.uavstack.resources.common.messaging.MessageProducerResourceComponent
#resource.xxxx.properties, for example: <key1>=<value1>,<key2>=<value2>,...
resource.messageproducer.properties=
#resource.xxxx.<customized item>
resource.messageproducer.messagingnameserver=127.0.0.1:9876;127.0.0.1:9876;127.0.0.1:9876
#message threshold's unit is kb
resource.messageproducer.messagingthreshold=30

#System Http Invoker
resource.httpinvoke.class=org.uavstack.resources.common.invoker.HttpInvokerResourceComponent
resource.httpinvoke.properties=
resource.httpinvoke.http.client.maxperroute=20
resource.httpinvoke.http.client.maxtotal=100
resource.httpinvoke.http.client.sotimeout=10000
resource.httpinvoke.http.client.conntimeout=10000
resource.httpinvoke.http.client.reqtimeout=10000

#nodeoperagent
feature.nodeoperagent.loader=com.creditease.uav.agent.heartbeat.jar
#feature.xxx.enable should enable this feature
feature.nodeoperagent.enable=true
feature.nodeoperagent.components=com.creditease.agent.feature.NodeOperAgent
feature.nodeoperagent.http.port=10110

#notifyagent
feature.notifyagent.loader=com.creditease.uav.notifymanager.jar
#feature.xxx.enable should enable this feature
feature.notifyagent.enable=true
#feature.xxx.components is the component classes (extends com.creditease.agent.spi.AgentFeatureComponent), separator "," for multiply classes
feature.notifyagent.components=com.creditease.agent.feature.GlobalNotificationAgent
#feature.xxx.properties for the feature, for example: <key1>=<value1>,<key2>=<value2>,...
feature.notifyagent.properties=
feature.notifyagent.notifyhandlers=com.creditease.agent.feature.globalnotify.handlers.NotificationEventPublishHandler
#event expire in seconds, 4 hour by default
feature.notifyagent.expireTime=14400
#event send forzen interval in seconds, 5 min by default
feature.notifyagent.frozenTime=300

#heartbeatclientagent Agent Feature xxx
#feature.xxx.loader should be a jar file path or default
feature.hbclientagent.loader=com.creditease.uav.agent.heartbeat.jar
#feature.xxx.enable should enable this feature
feature.hbclientagent.enable=true
#feature.xxx.components is the component classes (extends com.creditease.agent.spi.AgentFeatureComponent), separator "," for multiply classes
feature.hbclientagent.components=com.creditease.agent.feature.HeartBeatClientAgent
#feature.xxx.properties for the feature, for example: <key1>=<value1>,<key2>=<value2>,...
feature.hbclientagent.properties=
#feature.monitoragent.hbhandlers for heartbeat handlers
feature.hbclientagent.hbhandlers=com.creditease.agent.feature.hbagent.handlers.HBClientDefaultHandler
#heart beat server poll self
feature.hbclientagent.hbservers=127.0.0.1:8011
feature.hbclientagent.interval=15000
#-----------------------------COMMON FEATURES END---------------------------------------------------

#Proc Detect Agent Feature
feature.procscan.loader=com.creditease.uav.agent.heartbeat.jar
feature.procscan.enable=false
feature.procscan.components=com.creditease.agent.feature.ProcDetectAgent
feature.procscan.properties=
#scanning interval
feature.procscan.scan.interval=15000

#heartbeatserveragent Agent Feature xxx
#feature.xxx.loader should be a jar file path or default
feature.hbserveragent.loader=com.creditease.uav.agent.heartbeat.jar
#feature.xxx.enable should enable this feature
feature.hbserveragent.enable=true
#feature.xxx.components is the component classes (extends com.creditease.agent.spi.AgentFeatureComponent), separator "," for multiply classes
feature.hbserveragent.components=com.creditease.agent.feature.HeartBeatServerAgent
#feature.xxx.properties for the feature, for example: <key1>=<value1>,<key2>=<value2>,...
feature.hbserveragent.properties=
#feature.monitoragent.hbhandlers for heartbeat handlers
feature.hbserveragent.hbhandlers=com.creditease.agent.feature.hbagent.handlers.HBServerDefaultHandler
#feature.hbserveragent.http.port for heartbeat
feature.hbserveragent.http.port=8011
#feature.hbserveragent.http.qport for query 
feature.hbserveragent.hbqueryhandlers=com.creditease.agent.feature.hbagent.handlers.HBQueryHandler
feature.hbserveragent.http.qport=8021
feature.hbserveragent.http.backlog=10
feature.hbserveragent.http.core=30
feature.hbserveragent.http.max=150
feature.hbserveragent.http.bqsize=5
feature.hbserveragent.store.addr=127.0.0.1:26379
feature.hbserveragent.store.concurrent.min=40
feature.hbserveragent.store.concurrent.max=200
feature.hbserveragent.store.concurrent.bqsize=5
feature.hbserveragent.store.concurrent.pwd=
#if is master server node, then store node info into cache system
#if is not master server node, just pass the node to the target master server node.
feature.hbserveragent.ismaster=true
feature.hbserveragent.lifekeeper.enable=true
feature.hbserveragent.lifekeeper.interval=15000
feature.hbserveragent.lifekeeper.locktimeout=60000
feature.hbserveragent.lifekeeper.nodetimeout=20000
#enable ntp serivce
feature.hbserveragent.ntp.enable=false

#-------------------------------------------RUNTIME NOTIFY-------------------------------------------
#feature runtimenotify 
feature.runtimenotify.loader=com.creditease.uav.healthmanager-1.0.jar
feature.runtimenotify.enable=true
feature.runtimenotify.components=com.creditease.uav.feature.RuntimeNotifyCatcher
feature.runtimenotify.rnhandlers=com.creditease.uav.feature.runtimenotify.RuntimeNotifyDataHandler
#consumer
feature.runtimenotify.messagingnameserver=127.0.0.1:9876;127.0.0.1:9876;127.0.0.1:9876
feature.runtimenotify.MT_Runtime.consumethreadmax=30
feature.runtimenotify.MT_Runtime.consumestopinterval=0
feature.runtimenotify.MT_Runtime.enable=false
#cache
feature.runtimenotify.cm.server=127.0.0.1:26379
feature.runtimenotify.cm.minsize=10
feature.runtimenotify.cm.maxsize=30
feature.runtimenotify.cm.qsize=5
feature.runtimenotify.storecm.server=127.0.0.1:26379
feature.runtimenotify.storecm.minsize=30
feature.runtimenotify.storecm.maxsize=150
feature.runtimenotify.storecm.qsize=5
#qworker
feature.runtimenotify.qworker.coresize=20
feature.runtimenotify.qworker.maxsize=100
feature.runtimenotify.qworker.bqsize=5
feature.runtimenotify.qworker.keepalivetimeout=60000
#nodeinfotimer
feature.runtimenotify.nodeinfotimer.enable=true
feature.runtimenotify.nodeinfotimer.period=15000
#nodeinfoprocess
feature.runtimenotify.nodeinfoprocess.sendmq=true
feature.runtimenotify.nodeinfoprocess.exchange=false
#http service
feature.runtimenotify.rnswhandlers=com.creditease.uav.feature.runtimenotify.http.RuntimeNotifyServerHandler
feature.runtimenotify.http.port=9003
feature.runtimenotify.http.backlog=10
feature.runtimenotify.http.core=10
feature.runtimenotify.http.max=50
feature.runtimenotify.http.bqsize=10
#crash process timeout
feature.runtimenotify.crash.timeout=300000
#in seconds, this is only for development now, the production is read from cache, see the above cache setting 
#feature.runtimenotify.strategy.config={"server_hostState":{"conditions":[{"expr":"os.cpu.load>8",range:10,func:"avg"},{"expr":"os.cpu.load>5",range:10,func:"count>3"},"os.cpu.load>20"],scope:"M",context:[]},"server_procState":{"conditions":["cpu>5",{"expr":"cpu>2","range":2,"func":"avg"},{"expr":"memRate>5","range":10,"func":"avg"}],"scope":"M","context":[]}}
#sync interval from cache
feature.runtimenotify.strategy.interval=60000
#in ms
feature.runtimenotify.slice.config={"N":{"timerange":"600000","expire":"60000"},"M":{"timerange":"600000","expire":"60000"},"L":{"timerange":"600000","expire":"0"}}
